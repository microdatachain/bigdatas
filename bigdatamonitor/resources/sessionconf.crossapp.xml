<properties>

	<property name="sessionManager" class="org.frameworkset.security.session.impl.SessionManager"
		init-method="init" destroy-method="destroy">		
			<property name="sessionTimeout" value="3600000"/>
			<property name="sessionstore" refid="attr:sessionstore"/> 
			<!-- <property name="sessionstore" value="session"/>-->
			<property name="cookiename" value="b_sessionid"/>			
			<property name="httpOnly" value="true"/>
			<property name="secure" value="false"/>
	
		
			<property name="appcode" value="microdatachain"/>
	
			<property name="crossDomain" class="org.frameworkset.security.session.domain.CrossDomain" 
			    f:domain="127.0.0.1"  
			    f:shareSessionAttrs="userAccount" 
			    init-method="init">
			    <property name="domainApps">
				    <list componentType="bean">
				        <property class="org.frameworkset.security.session.domain.App"
				            	f:path="/session" 
                                                f:currentApp="false"
				            	f:attributeNamespace="session_microdatachain_com_cn"  
				            	init-method="init"
				            />				        
				        <property class="org.frameworkset.security.session.domain.App"				            	
				            	f:path="/sessionmonitor"	
                                                f:currentApp="true"
				            	f:attributeNamespace="sessionmonitor_microdatachain_com_cn"
				            	init-method="init"
				            />
				        
				       
				    </list>
			    </property>
			</property>    
			<property name="startLifeScan" value="false"/>  
<!--             <property name="sessionlisteners" value="org.frameworkset.security.session.impl.NullSessionListener"/> -->
	</property>
	
	<property name="sessionStaticManager" f:monitorScope="all" class="org.frameworkset.security.session.statics.MongoSessionStaticManagerImpl"/>	
	
	<property name="sessionstore" class="org.frameworkset.security.session.impl.MongDBSessionStore"/>
</properties>